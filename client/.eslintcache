[{"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/index.js":"1","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/App.js":"2","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/Reducer.js":"3","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Home.js":"4","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Header.js":"5","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Footer.js":"6","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/LoginSignup.js":"7","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Question.js":"8","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Profile.js":"9","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/NotFound.js":"10","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FinalScreen.js":"11","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/PrivateRoute.js":"12","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/QuizSelect.js":"13","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Login.js":"14","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Signup.js":"15","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/Auth.js":"16","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/queries.js":"17","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/mutations.js":"18","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FetchButton.js":"19"},{"size":406,"mtime":1670017841328,"results":"20","hashOfConfig":"21"},{"size":2148,"mtime":1669791791665,"results":"22","hashOfConfig":"21"},{"size":1190,"mtime":1670046921597,"results":"23","hashOfConfig":"21"},{"size":1539,"mtime":1670542848328,"results":"24","hashOfConfig":"21"},{"size":539,"mtime":1669791791685,"results":"25","hashOfConfig":"21"},{"size":142,"mtime":1669791791685,"results":"26","hashOfConfig":"21"},{"size":558,"mtime":1669853298653,"results":"27","hashOfConfig":"21"},{"size":4653,"mtime":1670540898852,"results":"28","hashOfConfig":"21"},{"size":1484,"mtime":1670540801510,"results":"29","hashOfConfig":"21"},{"size":255,"mtime":1669791791686,"results":"30","hashOfConfig":"21"},{"size":677,"mtime":1670537190691,"results":"31","hashOfConfig":"21"},{"size":296,"mtime":1669791791686,"results":"32","hashOfConfig":"21"},{"size":2012,"mtime":1669853298655,"results":"33","hashOfConfig":"21"},{"size":3064,"mtime":1669853298653,"results":"34","hashOfConfig":"21"},{"size":3431,"mtime":1670523157495,"results":"35","hashOfConfig":"21"},{"size":1234,"mtime":1669791791688,"results":"36","hashOfConfig":"21"},{"size":187,"mtime":1670006528080,"results":"37","hashOfConfig":"21"},{"size":769,"mtime":1670539332364,"results":"38","hashOfConfig":"21"},{"size":1590,"mtime":1669853298652,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1w77846",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/index.js",[],["83","84"],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/App.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/Reducer.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Home.js",["85","86"],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Header.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Footer.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/LoginSignup.js",["87"],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Signup from './Signup';\n\nfunction LoginSignup() {\n    const navigate = useNavigate();\n\n    return (\n      <div className=''>\n        <Login />\n        <div className='spacer'></div>\n        <Signup />\n        <div className='spacer2'></div>\n        <div className='home-buttons'>\n        <button className='btn text-white' onClick={() => { navigate('/') }}>Home</button>\n      </div>\n      </div>\n    );\n}\n\nexport default LoginSignup","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Question.js",["88","89","90","91"],"import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport Auth from '../utils/Auth'\nimport { UPDATE_USER } from '../utils/mutations'\nimport { GET_ME } from '../utils/queries'\nimport { useMutation, useQuery } from '@apollo/client'\n\nconst decodeHTML = function (html) {\n  const txt = document.createElement('textarea')\n  txt.innerHTML = html\n  return txt.value\n}\n\nfunction Question() {\n  const { loading, data } = useQuery(GET_ME);\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([])\n  const [answerSelected, setAnswerSelected] = useState(false)\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\n  const [options, setOptions] = useState([])\n  const score = useSelector((state) => state.score)\n  const encodedQuestions = useSelector((state) => state.questions)\n\n  const updateUserData = (cache, { data }) => {\n    console.log('updateUserData hook', data)\n    cache.modify({\n      id: cache.identify(data),\n      fields: {\n        questionsAnswered(cachedTotal) {\n          return data.questionsAnswered;\n        },\n        correctPercent(cachedPercent) {\n          return data.correctPercent;\n        },\n      },\n      /* broadcast: false // Include this to prevent automatic query refresh */\n    });\n  };\n\n  const [updateUser, { error }] = useMutation(UPDATE_USER, {\n    update: updateUserData\n  });\n\n  \n  useEffect(() => {\n    const decodedQuestions = encodedQuestions.map(q => {\n      return {\n        ...q,\n        question: decodeHTML(q.question),\n        correct_answer: decodeHTML(q.correct_answer),\n        incorrect_answers: q.incorrect_answers.map(a => decodeHTML(a))\n      }\n    })\n    setQuestions(decodedQuestions)\n  }, [encodedQuestions])\n  const questionIndex = useSelector((state) => state.index);\n  const dispatch = useDispatch()\n  const question = questions[questionIndex]\n  const answer = question && question.correct_answer\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max))\n  }\n\n  const handleFinish = async() => {\n    const userData = data?.me || {};\n    console.log(userData.questionsAnswered);\n    const username = userData.username\n    const newScore = userData.questionsCorrect + score;\n    const newTotal = userData.questionsAnswered + 10;\n    const newPercent = newScore / newTotal * 100; \n    console.log('newTotal', newTotal);\n    console.log('newScore', newScore);\n    console.log('username', username);\n    console.log('newPercent', newPercent);\n\n    const { updatedData } = await updateUser({\n      variables: { username: username , questionsAnswered: newTotal, questionsCorrect: newScore },\n    });\n    console.log(updatedData);\n\n    navigate('/final');\n  }\n\n  useEffect(() => {\n    if (questionIndex >= 1) {\n      console.log(questionIndex);\n      handleFinish();\n    }\n    if (!question) {\n      return;\n    }\n    let answers = [...question.incorrect_answers]\n    answers.splice(getRandomInt(question.incorrect_answers.length), 0, question.correct_answer)\n    setOptions(answers)\n  }, [question])\n  const handleListItemClick = (event) => {\n\n    setAnswerSelected(true)\n    setSelectedAnswer(event.target.textContent)\n    if (event.target.textContent === answer) {\n      dispatch({\n        type: 'SET_SCORE',\n        score: score + 1,\n      })\n    }\n    if (questionIndex + 1 <= questions.length) {\n      setTimeout(() => {\n        setAnswerSelected(false)\n        setSelectedAnswer(null)\n        dispatch({\n          type: 'SET_INDEX',\n          index: questionIndex + 1,\n        })\n      }, 2500)\n    }\n  }\n\n  const getClass = option => {\n    if (!answerSelected) {\n      return ``;\n    }\n    if (option === answer) {\n      return `correct disabled`;\n    }\n    if (option === selectedAnswer) {\n      return `selected disabled`;\n    } else {\n      return `disabled`;\n    }\n  }\n  if (!question) {\n    return <div>Loading</div>\n  }\n  return (\n    <div className='m-3'>\n      <p className='text-small'>Question {questionIndex + 1}</p>\n      <h3 className='question'>{question.question}</h3>\n      <div className='spacer'></div>\n      <ul>\n        {options.map((option, i) => (\n          <li key={i} onClick={handleListItemClick} className={getClass(option)}>\n            {option}\n          </li>\n        ))}\n      </ul>\n      <div className='text-small text-right'>\n        Score: {score} / {questions.length}\n      </div>\n      <div className='spacer2'></div>\n      <div className='text-right'>\n          <button className='btn btn-exit' onClick={() => { navigate('/') }}>Exit</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Question","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Profile.js",["92","93"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GET_ME } from '../utils/queries'\nimport { useQuery } from '@apollo/client';\n\nfunction Profile() {\n    const navigate = useNavigate();\n    const { loading, data } = useQuery(GET_ME);\n    console.log(data)\n    let userData = data?.me || {};\n    console.log('userData', userData)\n\n    return (\n        <main className='page-main d-flex justify-content-center align-items-center'>\n            <div className='spacer4'></div>\n            <div className='text-center'>Profile</div>\n            <div className='spacer2'></div>\n                {loading ? (<div>LOADING...</div>)\n                : (<div className='profile-container text-center'>\n                    <h2>{userData.username}</h2>\n                    <div className='spacer'></div>\n                    <div>{userData.title}</div>\n                    <div className='spacer'></div>\n                    <div>Total Questions: {userData.questionsAnswered}</div>\n                    <div>Correct Answers: {userData.correctPercent}%</div>\n                    <div className='spacer2'></div>\n                </div>)}\n            <div className='home-buttons'>\n                {/* <button className='btn btn-blue' onClick={handleClick}>Update Stats</button> */}\n                <button className='btn text-white' onClick={() => { navigate('/') }}>Home</button>\n            </div>\n        </main>\n    )\n}\n\nexport default Profile","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/NotFound.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FinalScreen.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/PrivateRoute.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/QuizSelect.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Login.js",["94"],"// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import useMutation and LOGIN-USER\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/Auth\";\n\nconst Login = () => {\n  const [userFormData, setUserFormData] = useState({ username: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  // declaring loginUser with useMutation\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // use loginUser function\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <div className='spacer'></div>\n      <div className=\"text-center\">Login</div>\n      <Form className=\"text-center\" noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label className=\"p-1\" htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback className=\"text-faded\" type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label className=\"p-1\" htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback className=\"text-faded\" type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          className=\"btn-primary\"\n          disabled={!(userFormData.username && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n        <div className='spacer'></div>\n      </Form>\n    </>\n  );\n};\n\nexport default Login;","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Signup.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/Auth.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/queries.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/mutations.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FetchButton.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":13,"nodeType":"101","messageId":"102","endLine":9,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":10,"column":9,"nodeType":"105","endLine":10,"endColumn":34},{"ruleId":"99","severity":1,"message":"106","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"107","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":16,"column":11,"nodeType":"101","messageId":"102","endLine":16,"endColumn":18},{"ruleId":"99","severity":1,"message":"108","line":41,"column":24,"nodeType":"101","messageId":"102","endLine":41,"endColumn":29},{"ruleId":"103","severity":1,"message":"109","line":96,"column":6,"nodeType":"110","endLine":96,"endColumn":16,"suggestions":"111"},{"ruleId":"99","severity":1,"message":"112","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"106","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"108","line":17,"column":23,"nodeType":"101","messageId":"102","endLine":17,"endColumn":28},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'userData' logical expression could make the dependencies of useEffect Hook (at line 18) change on every render. To fix this, wrap the initialization of 'userData' in its own useMemo() Hook.","VariableDeclarator","'useState' is defined but never used.","'Auth' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleFinish' and 'questionIndex'. Either include them or remove the dependency array.","ArrayExpression",["115"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [handleFinish, question, questionIndex]",{"range":"118","text":"119"},[3100,3110],"[handleFinish, question, questionIndex]"]