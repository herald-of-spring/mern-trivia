[{"/Users/abe/Documents/00 Berkeley Bootcamp/trivia-test/client/src/index.js":"1","/Users/abe/Documents/00 Berkeley Bootcamp/trivia-test/client/src/App.js":"2","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/index.js":"3","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/App.js":"4","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Footer.js":"5","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Header.js":"6","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Home.js":"7","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/LoginSignup.js":"8","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Profile.js":"9","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/NotFound.js":"10","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/QuizSelect.js":"11","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/base.jsx":"12","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/question.jsx":"13","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/Reducer.js":"14","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FetchButton.js":"15","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Question.js":"16","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FinalScreen.js":"17","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Login.js":"18","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Signup.js":"19","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/mutations.js":"20","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/auth.js":"21","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/Auth.js":"22","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/PrivateRoute.js":"23"},{"size":219,"mtime":1667961188713,"results":"24","hashOfConfig":"25"},{"size":457,"mtime":1669087419669,"results":"26","hashOfConfig":"25"},{"size":403,"mtime":1669641384208,"results":"27","hashOfConfig":"28"},{"size":2432,"mtime":1669700292200,"results":"29","hashOfConfig":"28"},{"size":142,"mtime":1669644435081,"results":"30","hashOfConfig":"28"},{"size":539,"mtime":1669644431483,"results":"31","hashOfConfig":"28"},{"size":958,"mtime":1669700803449,"results":"32","hashOfConfig":"28"},{"size":317,"mtime":1669694829298,"results":"33","hashOfConfig":"28"},{"size":485,"mtime":1669651192953,"results":"34","hashOfConfig":"28"},{"size":255,"mtime":1669651175809,"results":"35","hashOfConfig":"28"},{"size":1904,"mtime":1669675097916,"results":"36","hashOfConfig":"28"},{"size":1139,"mtime":1669313265034,"results":"37","hashOfConfig":"28"},{"size":1257,"mtime":1669432274964,"results":"38","hashOfConfig":"28"},{"size":1003,"mtime":1669649943963,"results":"39","hashOfConfig":"28"},{"size":1581,"mtime":1669660265740,"results":"40","hashOfConfig":"28"},{"size":2854,"mtime":1669672468349,"results":"41","hashOfConfig":"28"},{"size":577,"mtime":1669674616310,"results":"42","hashOfConfig":"28"},{"size":2830,"mtime":1669695538324,"results":"43","hashOfConfig":"28"},{"size":3167,"mtime":1669698227207,"results":"44","hashOfConfig":"28"},{"size":428,"mtime":1669694770267,"results":"45","hashOfConfig":"28"},{"size":1234,"mtime":1669694895648,"results":"46","hashOfConfig":"28"},{"size":1234,"mtime":1669694895648,"results":"47","hashOfConfig":"28"},{"size":297,"mtime":1669700061229,"results":"48","hashOfConfig":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"ld1jwp",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1w77846",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abe/Documents/00 Berkeley Bootcamp/trivia-test/client/src/index.js",[],["100","101"],"/Users/abe/Documents/00 Berkeley Bootcamp/trivia-test/client/src/App.js",["102","103"],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/index.js",[],["104","105"],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/App.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Footer.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Header.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Home.js",["106"],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/LoginSignup.js",["107","108"],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Signup from './Signup';\n\nfunction LoginSignup() {\n    const navigate = useNavigate();\n\n    return (\n      <>\n        <Login />\n        <Signup />\n      </>\n    );\n}\n\nexport default LoginSignup","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Profile.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/NotFound.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/QuizSelect.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/base.jsx",["109","110","111","112","113","114"],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/question.jsx",["115"],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/Reducer.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FetchButton.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Question.js",["116"],"import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nconst decodeHTML = function (html) {\n  const txt = document.createElement('textarea')\n  txt.innerHTML = html\n  return txt.value\n}\nfunction Question() {\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([])\n  const [answerSelected, setAnswerSelected] = useState(false)\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\n  const [options, setOptions] = useState([])\n  const score = useSelector((state) => state.score)\n  const encodedQuestions = useSelector((state) => state.questions)\n  \n  useEffect(() => {\n    const decodedQuestions = encodedQuestions.map(q => {\n      return {\n        ...q,\n        question: decodeHTML(q.question),\n        correct_answer: decodeHTML(q.correct_answer),\n        incorrect_answers: q.incorrect_answers.map(a => decodeHTML(a))\n      }\n    })\n    setQuestions(decodedQuestions)\n  }, [encodedQuestions])\n  const questionIndex = useSelector((state) => state.index);\n  const dispatch = useDispatch()\n  const question = questions[questionIndex]\n  const answer = question && question.correct_answer\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max))\n  }\n  useEffect(() => {\n    if (questionIndex >= 10) {\n      navigate('/final');\n    }\n    if (!question) {\n      return;\n    }\n    let answers = [...question.incorrect_answers]\n    answers.splice(getRandomInt(question.incorrect_answers.length), 0, question.correct_answer)\n    setOptions(answers)\n  }, [question])\n  const handleListItemClick = (event) => {\n    setAnswerSelected(true)\n    setSelectedAnswer(event.target.textContent)\n    if (event.target.textContent === answer) {\n      dispatch({\n        type: 'SET_SCORE',\n        score: score + 1,\n      })\n    }\n    if (questionIndex + 1 <= questions.length) {\n      setTimeout(() => {\n        setAnswerSelected(false)\n        setSelectedAnswer(null)\n        dispatch({\n          type: 'SET_INDEX',\n          index: questionIndex + 1,\n        })\n      }, 2500)\n    }\n  }\n\n  const getClass = option => {\n    if (!answerSelected) {\n      return ``;\n    }\n    if (option === answer) {\n      return `correct disabled`;\n    }\n    if (option === selectedAnswer) {\n      return `selected disabled`;\n    } else {\n      return `disabled`;\n    }\n  }\n  if (!question) {\n    return <div>Loading</div>\n  }\n  return (\n    <div>\n      <p>Question {questionIndex + 1}</p>\n      <h3>{question.question}</h3>\n      <ul>\n        {options.map((option, i) => (\n          <li key={i} onClick={handleListItemClick} className={getClass(option)}>\n            {option}\n          </li>\n        ))}\n      </ul>\n      <div>\n        Score: {score} / {questions.length}\n      </div>\n    </div>\n  )\n}\n\nexport default Question","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FinalScreen.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Login.js",["117"],"// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import useMutation and LOGIN-USER\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/Auth\";\n\nconst Login = () => {\n  const [userFormData, setUserFormData] = useState({ username: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  // declaring loginUser with useMutation\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // use loginUser function\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n        <div>Login</div>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Login;","/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Signup.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/mutations.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/auth.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/utils/Auth.js",[],"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/PrivateRoute.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":24,"nodeType":"124","messageId":"125","endLine":2,"endColumn":38},{"ruleId":"122","severity":1,"message":"126","line":8,"column":7,"nodeType":"124","messageId":"125","endLine":8,"endColumn":13},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":8,"column":5,"nodeType":"124","endLine":8,"endColumn":14,"suggestions":"131"},{"ruleId":"122","severity":1,"message":"132","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"133","line":7,"column":11,"nodeType":"124","messageId":"125","endLine":7,"endColumn":19},{"ruleId":"122","severity":1,"message":"134","line":5,"column":12,"nodeType":"124","messageId":"125","endLine":5,"endColumn":24},{"ruleId":"122","severity":1,"message":"135","line":7,"column":21,"nodeType":"124","messageId":"125","endLine":7,"endColumn":31},{"ruleId":"122","severity":1,"message":"136","line":8,"column":12,"nodeType":"124","messageId":"125","endLine":8,"endColumn":16},{"ruleId":"122","severity":1,"message":"137","line":24,"column":11,"nodeType":"124","messageId":"125","endLine":24,"endColumn":15},{"ruleId":"122","severity":1,"message":"138","line":31,"column":11,"nodeType":"124","messageId":"125","endLine":31,"endColumn":29},{"ruleId":"122","severity":1,"message":"139","line":35,"column":11,"nodeType":"124","messageId":"125","endLine":35,"endColumn":21},{"ruleId":"122","severity":1,"message":"140","line":6,"column":12,"nodeType":"124","messageId":"125","endLine":6,"endColumn":18},{"ruleId":"129","severity":1,"message":"141","line":47,"column":6,"nodeType":"142","endLine":47,"endColumn":16,"suggestions":"143"},{"ruleId":"122","severity":1,"message":"144","line":17,"column":23,"nodeType":"124","messageId":"125","endLine":17,"endColumn":28},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'ApolloProvider' is defined but never used.","Identifier","unusedVar","'client' is assigned a value but never used.",["145"],["146"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["147"],"'useState' is defined but never used.","'navigate' is assigned a value but never used.","'questionList' is assigned a value but never used.","'setCurrent' is assigned a value but never used.","'live' is assigned a value but never used.","'send' is assigned a value but never used.","'generateTriviaCard' is assigned a value but never used.","'getCurrent' is assigned a value but never used.","'active' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'questionIndex'. Either include them or remove the dependency array.","ArrayExpression",["148"],"'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Add dependencies array: []",{"range":"153","text":"154"},"Update the dependencies array to be: [navigate, question, questionIndex]",{"range":"155","text":"156"},[393,393],", []",[1610,1620],"[navigate, question, questionIndex]"]