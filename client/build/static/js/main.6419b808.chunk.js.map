{"version":3,"sources":["assets/mern-logo.png","components/Header.js","components/Footer.js","utils/Auth.js","components/Home.js","utils/mutations.js","components/Login.js","components/Signup.js","components/LoginSignup.js","components/FetchButton.js","components/QuizSelect.js","utils/queries.js","components/Profile.js","components/NotFound.js","components/Question.js","components/FinalScreen.js","components/PrivateRoute.js","App.js","Reducer.js","index.js"],"names":["Header","className","src","mernLogo","alt","Footer","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Home","console","log","auth","loggedIn","useState","user","setUser","navigate","useNavigate","useEffect","username","getProfile","data","onClick","logout","LOGIN_USER","gql","ADD_USER","UPDATE_USER","Login","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","loginUser","handleInputChange","error","event","target","name","value","handleFormSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","variables","Auth","login","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","Signup","addUser","LoginSignup","FetchButton","props","questionCategory","useSelector","state","options","question_category","dispatch","useDispatch","setLoading","loading","handleQuery","apiUrl","length","concat","fetch","then","res","json","response","results","questions","index","score","text","Settings","setOptions","handleLoadingChange","trivia_categories","map","option","id","GET_ME","Profile","useQuery","userData","me","title","questionsAnswered","correctPercent","NotFound","decodeHTML","html","txt","document","createElement","innerHTML","Question","updateUser","setQuestions","answerSelected","setAnswerSelected","selectedAnswer","setSelectedAnswer","encodedQuestions","decodedQuestions","q","question","correct_answer","incorrect_answers","a","questionIndex","answer","handleFinish","newScore","questionsCorrect","newTotal","updatedData","max","answers","splice","Math","floor","random","handleListItemClick","textContent","setTimeout","getClass","i","FinalScreen","PrivateRoute","children","to","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","path","element","QuizSelect","initState","Reducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6419b808.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mern-logo.0e1fd87c.png\";","import React from 'react';\nimport mernLogo from '../assets/mern-logo.png'\n\nfunction Header() {\n\n    return (\n        <header className='d-flex'>\n            <div className='d-flex row'>\n                <div className='logo-div mx-3 m-1'>\n                    <img className='mern-logo' src={mernLogo} alt='MERN Logo'></img>\n                </div>\n                <div className='mern-trivia'>\n                    <h1 className='m-0'>MERN Trivia</h1>\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react';\n\nfunction Footer() {\n\n    return (\n        <footer className='page-footer'></footer>\n    )\n}\n\nexport default Footer","// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport auth from '../utils/Auth';\n\nfunction Home() {\n    console.log(auth.loggedIn());\n    const [user, setUser] = useState('');\n    const navigate = useNavigate();\n    useEffect(() => {\n        const { data } = auth.getProfile();\n        const username = data.username\n        setUser(username);\n        return username;\n    }, [])\n\n    return (\n        <main className='page-main d-flex justify-content-center align-items-center'>\n            <div className='text-center'>Welcome, {user}!</div>\n            <div className='home-buttons m-5'>\n                <button className='btn' onClick={() => { navigate('/select') }}>Quizzes</button>\n                <button className='btn' onClick={() => { navigate('/profile') }}>Profile</button>\n                {auth.loggedIn() \n                ? (<button className='btn' onClick={auth.logout}>Logout</button>) \n                : (<button className='btn' onClick={() => { navigate('/login') }}>Login</button>)}\n            </div>\n        </main>\n    )\n}\n\nexport default Home","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\nmutation loginUser($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    token\n    user {\n      _id\n    }\n  }\n}\n`;\n\nexport const ADD_USER = gql`\nmutation addUser($username: String!, $password: String!) {\n  addUser(username: $username, password: $password) { \n    user {\n      _id\n      username\n    }\n    token\n  }\n}\n`;\n\nexport const UPDATE_USER = gql`\nmutation updateUser ($username: String!, $questionsAnswered: Int!, $questionsCorrect: Int!) {\n  updateUser(username: $username, questionsAnswered: $questionsAnswered, questionsCorrect: $questionsCorrect) {\n    _id\n  }\n}\n`;\n\n","// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import useMutation and LOGIN-USER\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/Auth\";\n\nconst Login = () => {\n  const [userFormData, setUserFormData] = useState({ username: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  // declaring loginUser with useMutation\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // use loginUser function\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n        <div>Login</div>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/Auth';\n\nconst Signup = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  // declare addUser function \n  const[addUser] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    // console.log(event.target.name, event.target.value);\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(userFormData);\n    // console.log('event', event);\n    // console.log('event.currentTarget', event.currentTarget);\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    // console.log(form.checkValidity());\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    console.log('after propogation');\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData}\n      });\n\n      console.log('data', data);\n\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    } \n\n    console.log('after Auth login');\n\n    setUserFormData({\n      username: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n        <div>Signup</div>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Create username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Signup from './Signup';\n\nfunction LoginSignup() {\n    const navigate = useNavigate();\n\n    return (\n      <div className=''>\n        <Login />\n        <Signup />\n        <div className='home-buttons'>\n        <button className='btn' onClick={() => { navigate('/') }}>Home</button>\n      </div>\n      </div>\n    );\n}\n\nexport default LoginSignup","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction FetchButton(props) {\n  const navigate = useNavigate();\n\t// access the settings that will be used to construct the API query\n  const questionCategory = useSelector(state => state.options.question_category)\n  // const questionIndex = useSelector(state => state.index)\n\t\n  const dispatch = useDispatch()\n\n  const setLoading = value => {\n    dispatch({\n      type: 'CHANGE_LOADING',\n      loading: value\n    })\n  }\n  const setQuestions = value => {\n    dispatch({\n      type: 'SET_QUESTIONS',\n      questions: value\n    })\n  }\n\n  const handleQuery = async () => {\n\t\t// we always need to specify the number of questions that we\n\t\t// want to be returned\n    let apiUrl = `https://opentdb.com/api.php?amount=10`;\n\t\t// only add the rest of the parameters if they aren't 'all'\n    if (questionCategory.length) {\n      apiUrl = apiUrl.concat(`&category=${questionCategory}`)\n    }\n\n    setLoading(true);\n\n    await fetch(apiUrl)\n    .then((res) => res.json())\n    .then((response) => {\n        setQuestions(response.results)\n        setLoading(false);\n    });\n\n    // if (questionIndex > 0) {\n      dispatch({\n        type: 'SET_INDEX',\n        index: 0,\n      })\n\n      dispatch({\n        type: 'SET_SCORE',\n        score: 0,\n      })\n\n    navigate('/quiz');\n  }\n\t// we will resuse this component, so the button text will be passed as props\n  return <button onClick={handleQuery} className='btn'>{props.text}</button>;\n}\nexport default FetchButton;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport FetchButton from './FetchButton';\n\nfunction Settings() {\n  const navigate = useNavigate();\n  const [options, setOptions] = useState(null);\n\t// replace state hooks with useSelector\n  const loading = useSelector(state => state.options.loading)\n  const questionCategory = useSelector(state => state.options.question_category)\n\t\n\t// defining to dispatch the actions\n  const dispatch = useDispatch()\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api_category.php`;\n    const handleLoadingChange = value => {\n      dispatch({\n        type: 'CHANGE_LOADING',\n        loading: value\n      })\n    }\n    handleLoadingChange(true);\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        handleLoadingChange(false);\n        setOptions(response.trivia_categories);\n      });\n  }, [setOptions, dispatch]);\n\t// replace setState with actions\n  const handleCategoryChange = event => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      value: event.target.value\n    })\n  }\n\tif (!loading) {\n\t\treturn (\n\t\t  <div className='d-flex flex-column'>\n        <div className='text-center'>\n          <h2>Select Category:</h2>\n          <select value={questionCategory} onChange={handleCategoryChange} className='w-75'>\n            <option>All</option>\n            {options && options.map((option) => (\n            <option value={option.id} key={option.id}>\n              {option.name}\n            </option>\n            ))}\n          </select>\n        </div>\n        <div className='select-buttons'>\n          <FetchButton text=\"Start!\" />\n          <button onClick={() => {navigate('/')}} className='btn'>Home</button>\n        </div>\n\t\t  </div>\n\t\t);\n\t} else {\n\t\t<p>\n      LOADING...\n    </p>\n\t}\n}\nexport default Settings;","import gql from 'graphql-tag';\n\nexport const GET_ME = gql`\n{\n    me {\n      _id\n      username\n      questionsAnswered\n      questionsCorrect\n      correctPercent\n      title\n    }\n  }\n`;","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Auth from '../utils/Auth';\nimport { GET_ME } from '../utils/queries'\nimport { useQuery } from '@apollo/client';\n\nfunction Profile() {\n    const navigate = useNavigate();\n    const { loading, data } = useQuery(GET_ME);\n    let userData = data?.me || {};\n    console.log(userData);\n\n    return (\n        <main className='page-main d-flex justify-content-center align-items-center'>\n            <div className='text-center'>Profile</div>\n            <div className='spacer2'></div>\n                {loading ? (<div>LOADING...</div>)\n                : (<div className='profile-container text-center'>\n                    <h2>{userData.username}</h2>\n                    <div className='spacer'></div>\n                    <div>{userData.title}</div>\n                    <div className='spacer'></div>\n                    <div>Total Questions: {userData.questionsAnswered}</div>\n                    <div>Correct Answers: {userData.correctPercent}%</div>\n                    <div className='spacer2'></div>\n                </div>)}\n            <div className='home-buttons'>\n                <button className='btn' onClick={() => { navigate('/') }}>Home</button>\n            </div>\n        </main>\n    )\n}\n\nexport default Profile","import React from 'react';\n\nfunction NotFound() {\n\n    return (\n        <main className='page-main d-flex justify-content-center align-items-center'>\n            <div className='text-center'>Not Found</div>\n        </main>\n    )\n}\n\nexport default NotFound","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport Auth from '../utils/Auth'\nimport { UPDATE_USER } from '../utils/mutations'\nimport { GET_ME } from '../utils/queries'\nimport { useMutation, useQuery } from '@apollo/client'\n\nconst decodeHTML = function (html) {\n  const txt = document.createElement('textarea')\n  txt.innerHTML = html\n  return txt.value\n}\nfunction Question() {\n  const [updateUser, { error }] = useMutation(UPDATE_USER);\n  const { loading, data } = useQuery(GET_ME);\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([])\n  const [answerSelected, setAnswerSelected] = useState(false)\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\n  const [options, setOptions] = useState([])\n  const score = useSelector((state) => state.score)\n  const encodedQuestions = useSelector((state) => state.questions)\n  \n  useEffect(() => {\n    const decodedQuestions = encodedQuestions.map(q => {\n      return {\n        ...q,\n        question: decodeHTML(q.question),\n        correct_answer: decodeHTML(q.correct_answer),\n        incorrect_answers: q.incorrect_answers.map(a => decodeHTML(a))\n      }\n    })\n    setQuestions(decodedQuestions)\n  }, [encodedQuestions])\n  const questionIndex = useSelector((state) => state.index);\n  const dispatch = useDispatch()\n  const question = questions[questionIndex]\n  const answer = question && question.correct_answer\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max))\n  }\n\n  const handleFinish = async() => {\n    let userData = data?.me || {};\n    console.log(userData.questionsAnswered);\n    const username = userData.username\n    const newScore = userData.questionsCorrect + score;\n    const newTotal = userData.questionsAnswered + 10;\n    console.log(newTotal);\n    console.log(newScore);\n    console.log(username);\n    const { updatedData } = await updateUser({\n      variables: {username: username , questionsAnswered: newTotal, questionsCorrect: newScore },\n    });\n    console.log(updatedData);\n    navigate('/final');\n  }\n\n  useEffect(() => {\n    if (questionIndex >= 2) {\n      console.log(questionIndex);\n      handleFinish();\n    }\n    if (!question) {\n      return;\n    }\n    let answers = [...question.incorrect_answers]\n    answers.splice(getRandomInt(question.incorrect_answers.length), 0, question.correct_answer)\n    setOptions(answers)\n  }, [question])\n  const handleListItemClick = (event) => {\n\n    setAnswerSelected(true)\n    setSelectedAnswer(event.target.textContent)\n    if (event.target.textContent === answer) {\n      dispatch({\n        type: 'SET_SCORE',\n        score: score + 1,\n      })\n    }\n    if (questionIndex + 1 <= questions.length) {\n      setTimeout(() => {\n        setAnswerSelected(false)\n        setSelectedAnswer(null)\n        dispatch({\n          type: 'SET_INDEX',\n          index: questionIndex + 1,\n        })\n      }, 2500)\n    }\n  }\n\n  const getClass = option => {\n    if (!answerSelected) {\n      return ``;\n    }\n    if (option === answer) {\n      return `correct disabled`;\n    }\n    if (option === selectedAnswer) {\n      return `selected disabled`;\n    } else {\n      return `disabled`;\n    }\n  }\n  if (!question) {\n    return <div>Loading</div>\n  }\n  return (\n    <div>\n      <p>Question {questionIndex + 1}</p>\n      <h3>{question.question}</h3>\n      <ul>\n        {options.map((option, i) => (\n          <li key={i} onClick={handleListItemClick} className={getClass(option)}>\n            {option}\n          </li>\n        ))}\n      </ul>\n      <div>\n        Score: {score} / {questions.length}\n      </div>\n    </div>\n  )\n}\n\nexport default Question","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nfunction FinalScreen() {\n  const navigate = useNavigate();\n  const score = useSelector((state) => state.score)\n\n  return (\n    <div className='d-flex flex-column'>\n      <div className='spacer2'></div>\n      <h3 className='text-center'>Final Score: {score}</h3>\n      <div className='spacer2'></div>\n      <div className='select-buttons'>\n        <button onClick={() => {navigate('/profile')}} className='btn'>Profile</button>\n        <button onClick={() => {navigate('/')}} className='btn'>Home</button>\n      </div>\n    </div>\n  )\n}\nexport default FinalScreen","import React from \"react\";\nimport Auth from \"../utils/Auth\";\nimport { Navigate } from \"react-router-dom\";\n\nfunction PrivateRoute({ children}) {\n    let auth = Auth.loggedIn();\n    return (\n      auth\n          ? children\n          : <Navigate to=\"/login\" />\n    );\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport LoginSignup from './components/LoginSignup';\nimport QuizSelect from './components/QuizSelect';\nimport Profile from './components/Profile';\nimport NotFound from './components/NotFound'\nimport './App.css'; \nimport Question from './components/Question';\nimport FinalScreen from './components/FinalScreen';\nimport { setContext } from '@apollo/client/link/context';\nimport PrivateRoute from './components/PrivateRoute';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <div></div>\n      <Header />\n      <Router>\n        <Routes>\n          <Route \n            path=\"/\" \n            element={<Home />}\n          />\n          <Route \n            path=\"/login\" \n            element={<LoginSignup />}\n          />\n          <Route\n          path=\"/select\"\n          element={\n            <PrivateRoute>\n              <QuizSelect />\n            </PrivateRoute>\n          }\n        />\n          <Route \n            path=\"/quiz\" \n            element={<Question />}\n          />\n          <Route \n            path=\"/final\" \n            element={<FinalScreen />}\n          />\n          <Route\n          path=\"/profile\"\n          element={\n            <PrivateRoute>\n              <Profile />\n            </PrivateRoute>\n          }\n        />\n          <Route \n            path=\"*\"\n            element={<NotFound />}\n          />\n        </Routes>\n      </Router>\n      <Footer />\n      </ApolloProvider>\n  );\n}\n\nexport default App;","// src/Reducer.js\nconst initState = {\n    options: {\n      loading: false,\n      question_category: ``,\n      index: 0,\n      score: 0\n    }\n  }\n  const Reducer = (state = initState, action) => {\n    switch (action.type) {\n      case \"CHANGE_LOADING\":\n        return {\n          ...state,\n          options: {\n            ...state.options,\n            loading: action.value\n          }\n        }\n      case \"CHANGE_CATEGORY\":\n        return {\n          ...state,\n          options: {\n            ...state.options,\n            question_category: action.value\n          }\n        }\n      case \"SET_QUESTIONS\":\n        return {\n          ...state,\n          questions: action.questions\n        }\n      case \"SET_INDEX\":\n        console.log('action.index', action.index)\n        return {\n        ...state,\n        index: action.index\n      }\n      case \"SET_SCORE\":\n        return {\n        ...state,\n        score: action.score\n      }\n      default:\n        return state\n    }\n  }\n  export default Reducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport Reducer from './Reducer'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(Reducer)\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}