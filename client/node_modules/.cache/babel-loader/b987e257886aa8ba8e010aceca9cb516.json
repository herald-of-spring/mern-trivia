{"ast":null,"code":"var _jsxFileName = \"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/QuizSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport FetchButton from './FetchButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const navigate = useNavigate();\n  const [options, setOptions] = useState(null);\n  // replace state hooks with useSelector\n  const loading = useSelector(state => state.options.loading);\n  const questionCategory = useSelector(state => state.options.question_category);\n\n  // defining to dispatch the actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api_category.php`;\n    const handleLoadingChange = value => {\n      dispatch({\n        type: 'CHANGE_LOADING',\n        loading: value\n      });\n    };\n    handleLoadingChange(true);\n    fetch(apiUrl).then(res => res.json()).then(response => {\n      handleLoadingChange(false);\n      setOptions(response.trivia_categories);\n    });\n  }, [setOptions, dispatch]);\n  // replace setState with actions\n  const handleCategoryChange = event => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      value: event.target.value\n    });\n  };\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: questionCategory,\n          onChange: handleCategoryChange,\n          className: \"w-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), options && options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.id,\n            children: option.name\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FetchButton, {\n        text: \"Start!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          navigate('/');\n        },\n        className: \"btn\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  } else {\n    /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this);\n  }\n}\n_s(Settings, \"KLtJ3yitoJB18sdDLcEnrS3Alp4=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useDispatch];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","useNavigate","FetchButton","Settings","navigate","options","setOptions","loading","state","questionCategory","question_category","dispatch","apiUrl","handleLoadingChange","value","type","fetch","then","res","json","response","trivia_categories","handleCategoryChange","event","target","map","option","id","name"],"sources":["/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/QuizSelect.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport FetchButton from './FetchButton';\n\nfunction Settings() {\n  const navigate = useNavigate();\n  const [options, setOptions] = useState(null);\n\t// replace state hooks with useSelector\n  const loading = useSelector(state => state.options.loading)\n  const questionCategory = useSelector(state => state.options.question_category)\n\t\n\t// defining to dispatch the actions\n  const dispatch = useDispatch()\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api_category.php`;\n    const handleLoadingChange = value => {\n      dispatch({\n        type: 'CHANGE_LOADING',\n        loading: value\n      })\n    }\n    handleLoadingChange(true);\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        handleLoadingChange(false);\n        setOptions(response.trivia_categories);\n      });\n  }, [setOptions, dispatch]);\n\t// replace setState with actions\n  const handleCategoryChange = event => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      value: event.target.value\n    })\n  }\n\tif (!loading) {\n\t\treturn (\n\t\t  <div className='d-flex flex-column'>\n        <div className='d-flex flex-column'>\n          <h2>Select Category:</h2>\n          <select value={questionCategory} onChange={handleCategoryChange} className='w-75'>\n            <option>All</option>\n            {options && options.map((option) => (\n            <option value={option.id} key={option.id}>\n              {option.name}\n            </option>\n            ))}\n          </select>\n        </div>\n        <FetchButton text=\"Start!\" />\n        <button onClick={() => {navigate('/')}} className='btn'>Home</button>\n\t\t</div>\n\t\t);\n\t} else {\n\t\t<p>\n      LOADING...\n    </p>\n\t}\n}\nexport default Settings;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC7C;EACC,MAAMS,OAAO,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACH,OAAO,CAACE,OAAO,CAAC;EAC3D,MAAME,gBAAgB,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACH,OAAO,CAACK,iBAAiB,CAAC;;EAE/E;EACC,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9BH,SAAS,CAAC,MAAM;IACd,MAAMe,MAAM,GAAI,sCAAqC;IACrD,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;MACnCH,QAAQ,CAAC;QACPI,IAAI,EAAE,gBAAgB;QACtBR,OAAO,EAAEO;MACX,CAAC,CAAC;IACJ,CAAC;IACDD,mBAAmB,CAAC,IAAI,CAAC;IACzBG,KAAK,CAACJ,MAAM,CAAC,CACVK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;MAClBP,mBAAmB,CAAC,KAAK,CAAC;MAC1BP,UAAU,CAACc,QAAQ,CAACC,iBAAiB,CAAC;IACxC,CAAC,CAAC;EACN,CAAC,EAAE,CAACf,UAAU,EAAEK,QAAQ,CAAC,CAAC;EAC3B;EACC,MAAMW,oBAAoB,GAAGC,KAAK,IAAI;IACpCZ,QAAQ,CAAC;MACPI,IAAI,EAAE,iBAAiB;MACvBD,KAAK,EAAES,KAAK,CAACC,MAAM,CAACV;IACtB,CAAC,CAAC;EACJ,CAAC;EACF,IAAI,CAACP,OAAO,EAAE;IACb,oBACE;MAAK,SAAS,EAAC,oBAAoB;MAAA,wBAC/B;QAAK,SAAS,EAAC,oBAAoB;QAAA,wBACjC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB,eACzB;UAAQ,KAAK,EAAEE,gBAAiB;UAAC,QAAQ,EAAEa,oBAAqB;UAAC,SAAS,EAAC,MAAM;UAAA,wBAC/E;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoB,EACnBjB,OAAO,IAAIA,OAAO,CAACoB,GAAG,CAAEC,MAAM,iBAC/B;YAAQ,KAAK,EAAEA,MAAM,CAACC,EAAG;YAAA,UACtBD,MAAM,CAACE;UAAI,GADiBF,MAAM,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QAGvC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QACK;MAAA;QAAA;QAAA;QAAA;MAAA,QACL,eACN,QAAC,WAAW;QAAC,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7B;QAAQ,OAAO,EAAE,MAAM;UAACvB,QAAQ,CAAC,GAAG,CAAC;QAAA,CAAE;QAAC,SAAS,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACrE;EAEP,CAAC,MAAM;IACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEM;EACP;AACD;AAAC,GAvDQD,QAAQ;EAAA,QACEF,WAAW,EAGZF,WAAW,EACFA,WAAW,EAGnBC,WAAW;AAAA;AAAA,KARrBG,QAAQ;AAwDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}