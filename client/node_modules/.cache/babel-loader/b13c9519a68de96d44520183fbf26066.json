{"ast":null,"code":"// import React from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n\n// function FetchButton(props) {\n// \t// access the settings that will be used to construct the API query\n//   const questionCategory = useSelector(state => state.options.question_category)\n//   const questionIndex = useSelector(state => state.index)\n\n//   const dispatch = useDispatch()\n//   const setLoading = value => {\n//     dispatch({\n//       type: 'CHANGE_LOADING',\n//       loading: value\n//     })\n//   }\n//   const setQuestions = value => {\n//     dispatch({\n//       type: 'SET_QUESTIONS',\n//       questions: value\n//     })\n//   }\n\n//   const handleQuery = async () => {\n// \t\t// we always need to specify the number of questions that we\n// \t\t// want to be returned\n//     let apiUrl = `https://opentdb.com/api.php?amount=10`;\n// \t\t// only add the rest of the parameters if they aren't 'all'\n//     if (questionCategory.length) {\n//       apiUrl = apiUrl.concat(`&category=${questionCategory}`)\n//     }\n//     await fetch(apiUrl)\n//       .then((res) => res.json())\n//       .then((response) => {\n//         // this is where we will set questions in the state using an action\n//       });\n\n//     setLoading(true);\n//     await fetch(apiUrl)\n//     .then((res) => res.json())\n//     .then((response) => {\n//         setQuestions(response.results)\n//         setLoading(false);\n//     });\n//   }\n// \t// we will resuse this component, so the button text will be passed as props\n//   return <button onClick={handleQuery}>{props.text}</button>;\n// }\n// export default FetchButton;","map":{"version":3,"names":[],"sources":["/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/FetchButton.js"],"sourcesContent":["// import React from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n\n// function FetchButton(props) {\n// \t// access the settings that will be used to construct the API query\n//   const questionCategory = useSelector(state => state.options.question_category)\n//   const questionIndex = useSelector(state => state.index)\n\t\n//   const dispatch = useDispatch()\n//   const setLoading = value => {\n//     dispatch({\n//       type: 'CHANGE_LOADING',\n//       loading: value\n//     })\n//   }\n//   const setQuestions = value => {\n//     dispatch({\n//       type: 'SET_QUESTIONS',\n//       questions: value\n//     })\n//   }\n\n//   const handleQuery = async () => {\n// \t\t// we always need to specify the number of questions that we\n// \t\t// want to be returned\n//     let apiUrl = `https://opentdb.com/api.php?amount=10`;\n// \t\t// only add the rest of the parameters if they aren't 'all'\n//     if (questionCategory.length) {\n//       apiUrl = apiUrl.concat(`&category=${questionCategory}`)\n//     }\n//     await fetch(apiUrl)\n//       .then((res) => res.json())\n//       .then((response) => {\n//         // this is where we will set questions in the state using an action\n//       });\n\n//     setLoading(true);\n//     await fetch(apiUrl)\n//     .then((res) => res.json())\n//     .then((response) => {\n//         setQuestions(response.results)\n//         setLoading(false);\n//     });\n//   }\n// \t// we will resuse this component, so the button text will be passed as props\n//   return <button onClick={handleQuery}>{props.text}</button>;\n// }\n// export default FetchButton;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}