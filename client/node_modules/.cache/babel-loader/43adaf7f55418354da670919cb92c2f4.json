{"ast":null,"code":"var _jsxFileName = \"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Card from \"./question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = props => {\n  _s();\n  const location = useLocation();\n  const categoryId = location.state.categoryId;\n  console.log(categoryId);\n\n  // const navigate = useNavigate();\n  // navigate('/quiz');\n  // const [category, setCategory] = useState('');\n  const [questionList, setQuestionList] = useState([]);\n  const [questionNum, setQuestionNum] = useState(0);\n  // const [score, setScore] = useState(0);\n  // const [current, setCurrent] = useState(null);\n  // const [live, setLive] = useState(false);\n\n  //calls question from api    \n  const getQuestions = useCallback(async () => {\n    const r = await fetch(`https://opentdb.com/api.php?amount=10&category=${categoryId}&difficulty=easy&type=multiple`);\n    const response = await r.json();\n    console.log(response);\n    const results = response.results;\n    console.log(results);\n    setQuestionList(results);\n    console.log(questionList);\n    return questionList;\n  }, []);\n  //get questions at game start\n  useEffect(() => {\n    getQuestions();\n  }, []);\n\n  //if correct answer is clicked, add to score\n  // const send = clicked => {\n  //     if (current.correct_answer === clicked){\n  //         setScore(score + 1)\n  //     }\n  //     setLive(false)\n  // }\n  //get current question, randomize answers for sending to card\n  const generateTriviaCard = () => {};\n  //populate current question & update question list if necessary\n  const getCurrent = async () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"ZEsoqJloCaQYsKBmDd/wQokaMRo=\", false, function () {\n  return [useLocation];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","useCallback","useNavigate","useLocation","Card","Quiz","props","location","categoryId","state","console","log","questionList","setQuestionList","questionNum","setQuestionNum","getQuestions","r","fetch","response","json","results","generateTriviaCard","getCurrent"],"sources":["/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Quiz.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Card from \"./question\";\n\nconst Quiz = props => {\n    const location = useLocation();\n    const categoryId = location.state.categoryId;\n    console.log(categoryId);\n\n    // const navigate = useNavigate();\n    // navigate('/quiz');\n    // const [category, setCategory] = useState('');\n    const [questionList, setQuestionList] = useState([]);\n    const [questionNum, setQuestionNum] = useState(0);\n    // const [score, setScore] = useState(0);\n    // const [current, setCurrent] = useState(null);\n    // const [live, setLive] = useState(false);\n\n//calls question from api    \n    const getQuestions = useCallback(async () => {\n        const r = await fetch(`https://opentdb.com/api.php?amount=10&category=${categoryId}&difficulty=easy&type=multiple`)\n\n        const response = await r.json();\n        console.log(response);\n        const results = response.results\n        console.log(results);\n        setQuestionList(results);\n        console.log(questionList);\n        return questionList;\n    }, [])\n//get questions at game start\n    useEffect(() => {\n        getQuestions();\n    }, [])\n\n//if correct answer is clicked, add to score\n    // const send = clicked => {\n    //     if (current.correct_answer === clicked){\n    //         setScore(score + 1)\n    //     }\n    //     setLive(false)\n    // }\n    //get current question, randomize answers for sending to card\n    const generateTriviaCard = () => {\n        \n    }\n    //populate current question & update question list if necessary\n    const getCurrent = async () => {\n        \n    }\n\n    return (\n        <>\n            <div></div>\n            <main>\n                <div></div>\n                {/* <div>\n                    <div>{props.answer[0]}</div>\n                    <div>{props.answer[1]}</div>\n                    <div>{props.answer[2]}</div>\n                    <div>{props.answer[3]}</div>\n                </div> */}\n            </main>\n        </>\n    )\n\n};\n\nexport default Quiz;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,IAAI,MAAM,YAAY;AAAC;AAAA;AAE9B,MAAMC,IAAI,GAAGC,KAAK,IAAI;EAAA;EAClB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,UAAU,GAAGD,QAAQ,CAACE,KAAK,CAACD,UAAU;EAC5CE,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;;EAEvB;EACA;EACA;EACA,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD;EACA;EACA;;EAEJ;EACI,MAAMiB,YAAY,GAAGf,WAAW,CAAC,YAAY;IACzC,MAAMgB,CAAC,GAAG,MAAMC,KAAK,CAAE,kDAAiDV,UAAW,gCAA+B,CAAC;IAEnH,MAAMW,QAAQ,GAAG,MAAMF,CAAC,CAACG,IAAI,EAAE;IAC/BV,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;IACrB,MAAME,OAAO,GAAGF,QAAQ,CAACE,OAAO;IAChCX,OAAO,CAACC,GAAG,CAACU,OAAO,CAAC;IACpBR,eAAe,CAACQ,OAAO,CAAC;IACxBX,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;IACzB,OAAOA,YAAY;EACvB,CAAC,EAAE,EAAE,CAAC;EACV;EACIZ,SAAS,CAAC,MAAM;IACZgB,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEV;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMM,kBAAkB,GAAG,MAAM,CAEjC,CAAC;EACD;EACA,MAAMC,UAAU,GAAG,YAAY,CAE/B,CAAC;EAED,oBACI;IAAA,wBACI;MAAA;MAAA;MAAA;IAAA,QAAW,eACX;MAAA,uBACI;QAAA;QAAA;QAAA;MAAA;IAAW;MAAA;MAAA;MAAA;IAAA,QAOR;EAAA,gBACR;AAGX,CAAC;AAAC,GA9DIlB,IAAI;EAAA,QACWF,WAAW;AAAA;AAAA,KAD1BE,IAAI;AAgEV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}