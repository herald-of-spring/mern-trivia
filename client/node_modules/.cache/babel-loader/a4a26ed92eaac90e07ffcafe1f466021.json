{"ast":null,"code":"var _jsxFileName = \"/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Question.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst decodeHTML = function (html) {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n};\nfunction Question() {\n  _s();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [answerSelected, setAnswerSelected] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [options, setOptions] = useState([]);\n  const score = useSelector(state => state.score);\n  const encodedQuestions = useSelector(state => state.questions);\n  useEffect(() => {\n    const decodedQuestions = encodedQuestions.map(q => {\n      return {\n        ...q,\n        question: decodeHTML(q.question),\n        correct_answer: decodeHTML(q.correct_answer),\n        incorrect_answers: q.incorrect_answers.map(a => decodeHTML(a))\n      };\n    });\n    setQuestions(decodedQuestions);\n  }, [encodedQuestions]);\n  const questionIndex = useSelector(state => state.index);\n  const dispatch = useDispatch();\n  const question = questions[questionIndex];\n  const answer = question && question.correct_answer;\n  const getRandomInt = max => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n  useEffect(() => {\n    if (!question) {\n      navigate('/final');\n      return;\n    }\n    let answers = [...question.incorrect_answers];\n    answers.splice(getRandomInt(question.incorrect_answers.length), 0, question.correct_answer);\n    setOptions(answers);\n  }, [question]);\n  const handleListItemClick = event => {\n    setAnswerSelected(true);\n    setSelectedAnswer(event.target.textContent);\n    if (event.target.textContent === answer) {\n      dispatch({\n        type: 'SET_SCORE',\n        score: score + 1\n      });\n    }\n    if (questionIndex + 1 <= questions.length) {\n      setTimeout(() => {\n        setAnswerSelected(false);\n        setSelectedAnswer(null);\n        dispatch({\n          type: 'SET_INDEX',\n          index: questionIndex + 1\n        });\n      }, 2500);\n    }\n  };\n  const getClass = option => {\n    if (!answerSelected) {\n      return ``;\n    }\n    if (option === answer) {\n      return `correct`;\n    }\n    if (option === selectedAnswer) {\n      return `selected`;\n    }\n  };\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Question \", questionIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: options.map((option, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: handleListItemClick,\n        className: getClass(option),\n        children: option\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: \", score, \" / \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Question, \"xHy/OB4UzjC/5YkAIshWAY6MKUU=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","Navigate","useNavigate","decodeHTML","html","txt","document","createElement","innerHTML","value","Question","navigate","questions","setQuestions","answerSelected","setAnswerSelected","selectedAnswer","setSelectedAnswer","options","setOptions","score","state","encodedQuestions","decodedQuestions","map","q","question","correct_answer","incorrect_answers","a","questionIndex","index","dispatch","answer","getRandomInt","max","Math","floor","random","answers","splice","length","handleListItemClick","event","target","textContent","type","setTimeout","getClass","option","i"],"sources":["/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/Question.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Navigate } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\n\nconst decodeHTML = function (html) {\n  const txt = document.createElement('textarea')\n  txt.innerHTML = html\n  return txt.value\n}\nfunction Question() {\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([])\n  const [answerSelected, setAnswerSelected] = useState(false)\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\n  const [options, setOptions] = useState([])\n  const score = useSelector((state) => state.score)\n  const encodedQuestions = useSelector((state) => state.questions)\n  \n  useEffect(() => {\n    const decodedQuestions = encodedQuestions.map(q => {\n      return {\n        ...q,\n        question: decodeHTML(q.question),\n        correct_answer: decodeHTML(q.correct_answer),\n        incorrect_answers: q.incorrect_answers.map(a => decodeHTML(a))\n      }\n    })\n    setQuestions(decodedQuestions)\n  }, [encodedQuestions])\n  const questionIndex = useSelector((state) => state.index);\n  const dispatch = useDispatch()\n  const question = questions[questionIndex]\n  const answer = question && question.correct_answer\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max))\n  }\n  useEffect(() => {\n    if (!question) {\n      navigate('/final');\n      return;\n    }\n    let answers = [...question.incorrect_answers]\n    answers.splice(getRandomInt(question.incorrect_answers.length), 0, question.correct_answer)\n    setOptions(answers)\n  }, [question])\n  const handleListItemClick = (event) => {\n    setAnswerSelected(true)\n    setSelectedAnswer(event.target.textContent)\n    if (event.target.textContent === answer) {\n      dispatch({\n        type: 'SET_SCORE',\n        score: score + 1,\n      })\n    }\n    if (questionIndex + 1 <= questions.length) {\n      setTimeout(() => {\n        setAnswerSelected(false)\n        setSelectedAnswer(null)\n        dispatch({\n          type: 'SET_INDEX',\n          index: questionIndex + 1,\n        })\n      }, 2500)\n    }\n  }\n\n  const getClass = option => {\n    if (!answerSelected) {\n      return ``;\n    }\n    if (option === answer) {\n      return `correct`\n    }\n    if (option === selectedAnswer) {\n      return `selected`\n    }\n  }\n  if (!question) {\n    return <div>Loading</div>\n  }\n  return (\n    <div>\n      <p>Question {questionIndex + 1}</p>\n      <h3>{question.question}</h3>\n      <ul>\n        {options.map((option, i) => (\n          <li key={i} onClick={handleListItemClick} className={getClass(option)}>\n            {option}\n          </li>\n        ))}\n      </ul>\n      <div>\n        Score: {score} / {questions.length}\n      </div>\n    </div>\n  )\n}\n\nexport default Question"],"mappings":"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"},"metadata":{},"sourceType":"module"}