{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\n\n//game\nconst Game = props => {\n  _s();\n  const [questionList, setQuestionList] = useState([]);\n  const [score, setScore] = useState(0);\n  const [current, setCurrent] = useState(null);\n  const [live, setLive] = useState(false);\n\n  //calls question from api    \n  const getQuestions = useCallback(async () => {\n    const r = await fetch(\"https://opentdb.com/api.php?amount=2&difficulty=easy&type=multiple\");\n    const response = await r.json();\n    console.log(response);\n    setQuestionList(response.results);\n  }, []);\n  //get questions at game start\n  useEffect(() => {\n    getQuestions();\n  }, [getQuestions]);\n\n  //if correct answer is clicked, add to score\n  const send = clicked => {\n    if (current.correct_answer === clicked) {\n      setScore(score + 1);\n    }\n    setLive(false);\n  };\n  //get current question, randomize answers for sending to card\n  const generateTriviaCard = () => {};\n  //populate current question & update question list if necessary\n  const getCurrent = async () => {};\n};\n_s(Game, \"9AukeN4eRKmd35ePdvXEJNSNiDE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","useCallback","Game","props","questionList","setQuestionList","score","setScore","current","setCurrent","live","setLive","getQuestions","r","fetch","response","json","console","log","results","send","clicked","correct_answer","generateTriviaCard","getCurrent"],"sources":["/Users/abe/Documents/00 Berkeley Bootcamp/mern-trivia/client/src/components/base.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\n//game\nconst Game = props => {\n    const [questionList, setQuestionList] = useState([]);\n    const [score, setScore] = useState(0);\n    const [current, setCurrent] = useState(null);\n    const [live, setLive] = useState(false);\n\n//calls question from api    \n    const getQuestions = useCallback(async () => {\n        const r = await fetch(\"https://opentdb.com/api.php?amount=2&difficulty=easy&type=multiple\")\n\n        const response = await r.json();\n        console.log(response);\n        setQuestionList(response.results);\n    }, [])\n//get questions at game start\n    useEffect( () => {\n        getQuestions()\n    }, [getQuestions])\n\n//if correct answer is clicked, add to score\n    const send = clicked => {\n        if (current.correct_answer === clicked){\n            setScore(score + 1)\n        }\n        setLive(false)\n    }\n    //get current question, randomize answers for sending to card\n    const generateTriviaCard = () => {\n\n    }\n    //populate current question & update question list if necessary\n    const getCurrent = async () => {\n\n    }\n\n};\n\nexport default Game;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;;AAExD;AACA,MAAMC,IAAI,GAAGC,KAAK,IAAI;EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACI,MAAMa,YAAY,GAAGX,WAAW,CAAC,YAAY;IACzC,MAAMY,CAAC,GAAG,MAAMC,KAAK,CAAC,oEAAoE,CAAC;IAE3F,MAAMC,QAAQ,GAAG,MAAMF,CAAC,CAACG,IAAI,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBV,eAAe,CAACU,QAAQ,CAACI,OAAO,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EACV;EACInB,SAAS,CAAE,MAAM;IACbY,YAAY,EAAE;EAClB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAEtB;EACI,MAAMQ,IAAI,GAAGC,OAAO,IAAI;IACpB,IAAIb,OAAO,CAACc,cAAc,KAAKD,OAAO,EAAC;MACnCd,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACvB;IACAK,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;EACD;EACA,MAAMY,kBAAkB,GAAG,MAAM,CAEjC,CAAC;EACD;EACA,MAAMC,UAAU,GAAG,YAAY,CAE/B,CAAC;AAEL,CAAC;AAAC,GAnCItB,IAAI;AAAA,KAAJA,IAAI;AAqCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}